// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkShop.Model;

namespace WorkShop.Migrations
{
    [DbContext(typeof(WorkShopContext))]
    partial class WorkShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("workshop")
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WorkShop.Model.DiscountType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasColumnName("tenant")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .HasName("idx_discount_type_created");

                    b.HasIndex("Tenant")
                        .HasName("idx_discount_type_tenant");

                    b.HasIndex("Updated")
                        .HasName("idx_discount_type_updated");

                    b.ToTable("discount_type");
                });

            modelBuilder.Entity("WorkShop.Model.Inventory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("amount")
                        .HasColumnType("double")
                        .HasDefaultValue(1.0);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double>("DiscountValue")
                        .HasColumnName("discount_value")
                        .HasColumnType("double");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasColumnName("tenant")
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Total")
                        .HasColumnName("total")
                        .HasColumnType("double");

                    b.Property<double>("UnitPrice")
                        .HasColumnName("unit_price")
                        .HasColumnType("double");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("discount_type_id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("operation_type_id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("product_id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("provider_invoice_id")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .HasName("idx_inventory_created");

                    b.HasIndex("Tenant")
                        .HasName("idx_inventory_tenant");

                    b.HasIndex("Updated")
                        .HasName("idx_inventory_updated");

                    b.HasIndex("discount_type_id");

                    b.HasIndex("operation_type_id");

                    b.HasIndex("product_id");

                    b.HasIndex("provider_invoice_id");

                    b.ToTable("inventory");
                });

            modelBuilder.Entity("WorkShop.Model.OperationType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(300)");

                    b.Property<int>("Inbound")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("inbound")
                        .HasColumnType("int")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasColumnName("tenant")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .HasName("idx_operation_type_created");

                    b.HasIndex("Inbound")
                        .HasName("idx_operation_type_inbound");

                    b.HasIndex("Tenant")
                        .HasName("idx_operation_type_tenant");

                    b.HasIndex("Updated")
                        .HasName("idx_operation_type_updated");

                    b.ToTable("operation_type");
                });

            modelBuilder.Entity("WorkShop.Model.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("code")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(300)");

                    b.Property<int>("MinimalAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("minimal_amount")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(150)");

                    b.Property<double>("SalePrice")
                        .HasColumnName("sale_price")
                        .HasColumnType("double");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasColumnName("tenant")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("uq_product_code");

                    b.HasIndex("Created")
                        .HasName("idx_product_created");

                    b.HasIndex("Tenant")
                        .HasName("idx_product_tenant");

                    b.HasIndex("Updated")
                        .HasName("idx_product_updated");

                    b.ToTable("product");
                });

            modelBuilder.Entity("WorkShop.Model.Provider", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("active")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Contact")
                        .HasColumnName("contact")
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxId")
                        .HasColumnName("tax_id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasColumnName("tenant")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("uq_provider_code");

                    b.HasIndex("Created")
                        .HasName("idx_provider_created");

                    b.HasIndex("TaxId")
                        .HasName("idx_provider_tax_id");

                    b.HasIndex("Tenant")
                        .HasName("idx_provider_tenant");

                    b.HasIndex("Updated")
                        .HasName("idx_provider_updated");

                    b.ToTable("provider");
                });

            modelBuilder.Entity("WorkShop.Model.ProviderInvoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("ImageUrl")
                        .HasColumnName("image_url")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("number")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasColumnName("suffix")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasColumnName("tenant")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("provider_id")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .HasName("idx_provider_invoice_created");

                    b.HasIndex("Tenant")
                        .HasName("idx_provider_invoice_tenant");

                    b.HasIndex("Updated")
                        .HasName("idx_provider_invoice_updated");

                    b.HasIndex("provider_id");

                    b.HasIndex("Suffix", "Number")
                        .HasName("idx_provider_invoice_number");

                    b.ToTable("provider_invoice");
                });

            modelBuilder.Entity("WorkShop.Model.Inventory", b =>
                {
                    b.HasOne("WorkShop.Model.DiscountType", "DiscountType")
                        .WithMany()
                        .HasForeignKey("discount_type_id");

                    b.HasOne("WorkShop.Model.OperationType", "OperationType")
                        .WithMany()
                        .HasForeignKey("operation_type_id");

                    b.HasOne("WorkShop.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("product_id");

                    b.HasOne("WorkShop.Model.ProviderInvoice", "ProviderInvoice")
                        .WithMany()
                        .HasForeignKey("provider_invoice_id");
                });

            modelBuilder.Entity("WorkShop.Model.ProviderInvoice", b =>
                {
                    b.HasOne("WorkShop.Model.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("provider_id");
                });
#pragma warning restore 612, 618
        }
    }
}
